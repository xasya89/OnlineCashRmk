// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineCashRmk;

namespace OnlineCashRmk.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220523130626_add_discounts")]
    partial class add_discounts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("OnlineCashRmk.Models.Arrival", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateArrival")
                        .HasColumnType("TEXT");

                    b.Property<string>("Num")
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Arrivals");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.ArrivalGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrivalId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Count")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpiresDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nds")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalId");

                    b.HasIndex("GoodId");

                    b.ToTable("ArrivalGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.BarCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.ToTable("BarCodes");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountSum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecialPercent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SumBuy")
                        .HasColumnType("TEXT");

                    b.Property<int>("TemporyPercent")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CashMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sum")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeOperation")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CashMoneys");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CheckGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CheckSellId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<double>("Count")
                        .HasColumnType("REAL");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CheckSellId");

                    b.HasIndex("GoodId");

                    b.ToTable("CheckGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CheckPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CheckSellId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Income")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Retturn")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sum")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypePayment")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CheckSellId");

                    b.ToTable("CheckPayments");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CheckSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsElectron")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShiftId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Sum")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumAll")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumDiscont")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeSell")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ShiftId");

                    b.ToTable("CheckSells");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Credit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Creditor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Sum")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumAll")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumCredit")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumDiscont")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isSynch")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CreditGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<double>("Count")
                        .HasColumnType("REAL");

                    b.Property<int>("CreditId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreditId");

                    b.HasIndex("GoodId");

                    b.ToTable("CreditGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CreditPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatePayment")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sum")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreditId");

                    b.ToTable("CreditPayments");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamBirthdayModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayEnable")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountParamContainerModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("DiscountSum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextSms")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscountParamContainerModelId");

                    b.ToTable("DiscountParamBirthdayModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamContainerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("PercentFromSale")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DiscountParamContainerModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamHolidaysModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateHoliday")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DiscountParamContainerModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("DiscountSum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextSms")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscountParamContainerModelId");

                    b.ToTable("DiscountParamHolidaysModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamNumBuyerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountParamContainerModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("DiscountSum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumBuyer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextSms")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscountParamContainerModelId");

                    b.ToTable("DiscountParamNumBuyerModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamSumBuyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountParamContainerModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("DiscountSum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SumBuyesMore")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscountParamContainerModelId");

                    b.ToTable("DiscountParamSumBuyModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamSumOneBuyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountParamContainerModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("DiscountSum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SumBuy")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscountParamContainerModelId");

                    b.ToTable("DiscountParamSumOneBuyModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamWeeksModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DayNum")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountParamContainerModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimeBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeWith")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscountParamContainerModelId");

                    b.ToTable("DiscountParamWeeksModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscountModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discounts")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscountModelId");

                    b.ToTable("DiscountSettings");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DocSynch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<int>("DocId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Synch")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SynchStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeDoc")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DocSynches");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Good", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Article")
                        .HasColumnType("TEXT");

                    b.Property<string>("BarCode")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecialType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unit")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.Property<double?>("VPackage")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.NewGoodFromCash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.ToTable("NewGoodsFromCash");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Revaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Create")
                        .HasColumnType("Date");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Revaluations");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.RevaluationGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Count")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PriceNew")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceOld")
                        .HasColumnType("TEXT");

                    b.Property<int>("RevaluationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.HasIndex("RevaluationId");

                    b.ToTable("RevaluationGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CashierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShopId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Stop")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumAll")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumCredit")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumElectron")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumIncome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumNoElectron")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumOutcome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumSell")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SummReturn")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isSynch")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Stocktaking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CashMoney")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Create")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isSynch")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stocktakings");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.StocktakingGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CountDocMove")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CountFact")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StocktakingGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.HasIndex("StocktakingGroupId");

                    b.ToTable("StocktakingGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.StocktakingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StocktakingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StocktakingId");

                    b.ToTable("StocktakingGroups");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Inn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kpp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Writeof", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SumAll")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Writeofs");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.WriteofGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Count")
                        .HasColumnType("REAL");

                    b.Property<int>("GoodId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("WriteofId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GoodId");

                    b.HasIndex("WriteofId");

                    b.ToTable("WriteofGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Arrival", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Supplier", "Supplier")
                        .WithMany("Arrivals")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.ArrivalGood", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Arrival", "Arrival")
                        .WithMany("ArrivalGoods")
                        .HasForeignKey("ArrivalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany("ArrivalGoods")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arrival");

                    b.Navigation("Good");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.BarCode", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany("BarCodes")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Good");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CheckGood", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.CheckSell", "CheckSell")
                        .WithMany("CheckGoods")
                        .HasForeignKey("CheckSellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany("CheckGoods")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckSell");

                    b.Navigation("Good");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CheckPayment", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.CheckSell", "CheckSell")
                        .WithMany("CheckPayments")
                        .HasForeignKey("CheckSellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckSell");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CheckSell", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Buyer", "Buyer")
                        .WithMany("CheckSells")
                        .HasForeignKey("BuyerId");

                    b.HasOne("OnlineCashRmk.Models.Shift", "Shift")
                        .WithMany("CheckSells")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Credit", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Shift", "Shift")
                        .WithMany("Credits")
                        .HasForeignKey("ShiftId");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CreditGood", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Credit", "Credit")
                        .WithMany("CreditGoods")
                        .HasForeignKey("CreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany()
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credit");

                    b.Navigation("Good");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CreditPayment", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Credit", "Credit")
                        .WithMany("CreditPayments")
                        .HasForeignKey("CreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credit");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamBirthdayModel", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.DiscountParamContainerModel", null)
                        .WithMany("Birthdays")
                        .HasForeignKey("DiscountParamContainerModelId");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamHolidaysModel", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.DiscountParamContainerModel", null)
                        .WithMany("Holidays")
                        .HasForeignKey("DiscountParamContainerModelId");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamNumBuyerModel", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.DiscountParamContainerModel", null)
                        .WithMany("NumBuyer")
                        .HasForeignKey("DiscountParamContainerModelId");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamSumBuyModel", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.DiscountParamContainerModel", null)
                        .WithMany("SumBuys")
                        .HasForeignKey("DiscountParamContainerModelId");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamSumOneBuyModel", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.DiscountParamContainerModel", null)
                        .WithMany("SumOneBuys")
                        .HasForeignKey("DiscountParamContainerModelId");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamWeeksModel", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.DiscountParamContainerModel", null)
                        .WithMany("Weeks")
                        .HasForeignKey("DiscountParamContainerModelId");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountSetting", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.DiscountParamContainerModel", "DiscountModel")
                        .WithMany()
                        .HasForeignKey("DiscountModelId");

                    b.Navigation("DiscountModel");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.NewGoodFromCash", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany("NewGoodsFromCashe")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Good");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.RevaluationGood", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany("RevaluationGoods")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineCashRmk.Models.Revaluation", "Revaluation")
                        .WithMany("RevaluationGoods")
                        .HasForeignKey("RevaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Good");

                    b.Navigation("Revaluation");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.StocktakingGood", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany("StocktakingGoods")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineCashRmk.Models.StocktakingGroup", "StocktakingGroup")
                        .WithMany("StocktakingGoods")
                        .HasForeignKey("StocktakingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Good");

                    b.Navigation("StocktakingGroup");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.StocktakingGroup", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Stocktaking", "Stocktaking")
                        .WithMany("StocktakingGroups")
                        .HasForeignKey("StocktakingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stocktaking");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.WriteofGood", b =>
                {
                    b.HasOne("OnlineCashRmk.Models.Good", "Good")
                        .WithMany("GetWriteofGoods")
                        .HasForeignKey("GoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineCashRmk.Models.Writeof", "Writeof")
                        .WithMany("WriteofGoods")
                        .HasForeignKey("WriteofId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Good");

                    b.Navigation("Writeof");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Arrival", b =>
                {
                    b.Navigation("ArrivalGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Buyer", b =>
                {
                    b.Navigation("CheckSells");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.CheckSell", b =>
                {
                    b.Navigation("CheckGoods");

                    b.Navigation("CheckPayments");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Credit", b =>
                {
                    b.Navigation("CreditGoods");

                    b.Navigation("CreditPayments");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.DiscountParamContainerModel", b =>
                {
                    b.Navigation("Birthdays");

                    b.Navigation("Holidays");

                    b.Navigation("NumBuyer");

                    b.Navigation("SumBuys");

                    b.Navigation("SumOneBuys");

                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Good", b =>
                {
                    b.Navigation("ArrivalGoods");

                    b.Navigation("BarCodes");

                    b.Navigation("CheckGoods");

                    b.Navigation("GetWriteofGoods");

                    b.Navigation("NewGoodsFromCashe");

                    b.Navigation("RevaluationGoods");

                    b.Navigation("StocktakingGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Revaluation", b =>
                {
                    b.Navigation("RevaluationGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Shift", b =>
                {
                    b.Navigation("CheckSells");

                    b.Navigation("Credits");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Stocktaking", b =>
                {
                    b.Navigation("StocktakingGroups");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.StocktakingGroup", b =>
                {
                    b.Navigation("StocktakingGoods");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Supplier", b =>
                {
                    b.Navigation("Arrivals");
                });

            modelBuilder.Entity("OnlineCashRmk.Models.Writeof", b =>
                {
                    b.Navigation("WriteofGoods");
                });
#pragma warning restore 612, 618
        }
    }
}
